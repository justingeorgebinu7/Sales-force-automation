package sfa.model.viewobjects;

import java.math.BigDecimal;

import java.sql.Timestamp;

import java.util.Date;

import oracle.adf.share.ADFContext;

import oracle.adf.share.security.SecurityContext;

import oracle.jbo.server.ViewRowImpl;

import sfa.model.entities.NoteImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Nov 23 16:25:26 IST 2021
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class NoteViewRowImpl extends ViewRowImpl implements sfa.model.viewobjects.common.NoteViewRow {

    public static final int ENTITY_NOTE = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        Noteid,
        Content,
        Datetime,
        Accountid,
        Contactid,
        Opportunity,
        Subject,
        Createdby,
        Updateddate,
        Updatedby,
        Createddate;
        private static AttributesEnum[] vals = null; ;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int NOTEID = AttributesEnum.Noteid.index();
    public static final int CONTENT = AttributesEnum.Content.index();
    public static final int DATETIME = AttributesEnum.Datetime.index();
    public static final int ACCOUNTID = AttributesEnum.Accountid.index();
    public static final int CONTACTID = AttributesEnum.Contactid.index();
    public static final int OPPORTUNITY = AttributesEnum.Opportunity.index();
    public static final int SUBJECT = AttributesEnum.Subject.index();
    public static final int CREATEDBY = AttributesEnum.Createdby.index();
    public static final int UPDATEDDATE = AttributesEnum.Updateddate.index();
    public static final int UPDATEDBY = AttributesEnum.Updatedby.index();
    public static final int CREATEDDATE = AttributesEnum.Createddate.index();

    /**
     * This is the default constructor (do not remove).
     */
    public NoteViewRowImpl() {
    }

    /**
     * Gets Note entity object.
     * @return the Note
     */
    public NoteImpl getNote() {
        return (NoteImpl) getEntity(ENTITY_NOTE);
    }

    /**
     * Gets the attribute value for NOTEID using the alias name Noteid.
     * @return the NOTEID
     */
    public BigDecimal getNoteid() {
        return (BigDecimal) getAttributeInternal(NOTEID);
    }

    /**
     * Sets <code>value</code> as attribute value for NOTEID using the alias name Noteid.
     * @param value value to set the NOTEID
     */
    public void setNoteid(BigDecimal value) {
        setAttributeInternal(NOTEID, value);
    }

    /**
     * Gets the attribute value for CONTENT using the alias name Content.
     * @return the CONTENT
     */
    public String getContent() {
        return (String) getAttributeInternal(CONTENT);
    }

    /**
     * Sets <code>value</code> as attribute value for CONTENT using the alias name Content.
     * @param value value to set the CONTENT
     */
    public void setContent(String value) {
        setAttributeInternal(CONTENT, value);
    }

    /**
     * Gets the attribute value for DATETIME using the alias name Datetime.
     * @return the DATETIME
     */
    public Timestamp getDatetime() {
        return (Timestamp) getAttributeInternal(DATETIME);
    }

    /**
     * Sets <code>value</code> as attribute value for DATETIME using the alias name Datetime.
     * @param value value to set the DATETIME
     */
    public void setDatetime(Timestamp value) {
        setAttributeInternal(DATETIME, value);
    }

    /**
     * Gets the attribute value for ACCOUNTID using the alias name Accountid.
     * @return the ACCOUNTID
     */
    public BigDecimal getAccountid() {
        return (BigDecimal) getAttributeInternal(ACCOUNTID);
    }

    /**
     * Sets <code>value</code> as attribute value for ACCOUNTID using the alias name Accountid.
     * @param value value to set the ACCOUNTID
     */
    public void setAccountid(BigDecimal value) {
        setAttributeInternal(ACCOUNTID, value);
    }

    /**
     * Gets the attribute value for CONTACTID using the alias name Contactid.
     * @return the CONTACTID
     */
    public BigDecimal getContactid() {
        return (BigDecimal) getAttributeInternal(CONTACTID);
    }

    /**
     * Sets <code>value</code> as attribute value for CONTACTID using the alias name Contactid.
     * @param value value to set the CONTACTID
     */
    public void setContactid(BigDecimal value) {
        setAttributeInternal(CONTACTID, value);
    }

    /**
     * Gets the attribute value for OPPORTUNITY using the alias name Opportunity.
     * @return the OPPORTUNITY
     */
    public BigDecimal getOpportunity() {
        return (BigDecimal) getAttributeInternal(OPPORTUNITY);
    }

    /**
     * Sets <code>value</code> as attribute value for OPPORTUNITY using the alias name Opportunity.
     * @param value value to set the OPPORTUNITY
     */
    public void setOpportunity(BigDecimal value) {
        setAttributeInternal(OPPORTUNITY, value);
    }

    /**
     * Gets the attribute value for SUBJECT using the alias name Subject.
     * @return the SUBJECT
     */
    public String getSubject() {
        return (String) getAttributeInternal(SUBJECT);
    }

    /**
     * Sets <code>value</code> as attribute value for SUBJECT using the alias name Subject.
     * @param value value to set the SUBJECT
     */
    public void setSubject(String value) {
        setAttributeInternal(SUBJECT, value);
    }

    /**
     * Gets the attribute value for CREATEDBY using the alias name Createdby.
     * @return the CREATEDBY
     */
    public String getCreatedby() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATEDBY using the alias name Createdby.
     * @param value value to set the CREATEDBY
     */
    public void setCreatedby(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for UPDATEDDATE using the alias name Updateddate.
     * @return the UPDATEDDATE
     */
    public Timestamp getUpdateddate() {
        return (Timestamp) getAttributeInternal(UPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for UPDATEDDATE using the alias name Updateddate.
     * @param value value to set the UPDATEDDATE
     */
    public void setUpdateddate(Timestamp value) {
        setAttributeInternal(UPDATEDDATE, value);
    }

    /**
     * Gets the attribute value for UPDATEDBY using the alias name Updatedby.
     * @return the UPDATEDBY
     */
    public String getUpdatedby() {
        return (String) getAttributeInternal(UPDATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for UPDATEDBY using the alias name Updatedby.
     * @param value value to set the UPDATEDBY
     */
    public void setUpdatedby(String value) {
        setAttributeInternal(UPDATEDBY, value);
    }

    /**
     * Gets the attribute value for CREATEDDATE using the alias name Createddate.
     * @return the CREATEDDATE
     */
    public Timestamp getCreateddate() {
        return (Timestamp) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATEDDATE using the alias name Createddate.
     * @param value value to set the CREATEDDATE
     */
    public void setCreateddate(Timestamp value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    public void update() {
        ADFContext adfCtx = ADFContext.getCurrent();
        SecurityContext secCntx = adfCtx.getSecurityContext();
        String value = secCntx.getUserName();
        setUpdatedby(value);
        Date date = new Date();
        Timestamp ts = new Timestamp(date.getTime());
        setUpdateddate(ts);
    }
}

