package sfa.model.entities;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.adf.share.ADFContext;

import oracle.adf.share.security.SecurityContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Nov 03 14:57:59 IST 2021
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class NoteImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        Noteid,
        Content,
        Datetime,
        Accountid,
        Contactid,
        Opportunity,
        Createdby,
        Subject,
        Createddate,
        Updatedby,
        Updateddate,
        Customeraccount,
        Customercontacts,
        Opportunity1;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int NOTEID = AttributesEnum.Noteid.index();
    public static final int CONTENT = AttributesEnum.Content.index();
    public static final int DATETIME = AttributesEnum.Datetime.index();
    public static final int ACCOUNTID = AttributesEnum.Accountid.index();
    public static final int CONTACTID = AttributesEnum.Contactid.index();
    public static final int OPPORTUNITY = AttributesEnum.Opportunity.index();
    public static final int CREATEDBY = AttributesEnum.Createdby.index();
    public static final int SUBJECT = AttributesEnum.Subject.index();
    public static final int CREATEDDATE = AttributesEnum.Createddate.index();
    public static final int UPDATEDBY = AttributesEnum.Updatedby.index();
    public static final int UPDATEDDATE = AttributesEnum.Updateddate.index();
    public static final int CUSTOMERACCOUNT = AttributesEnum.Customeraccount.index();
    public static final int CUSTOMERCONTACTS = AttributesEnum.Customercontacts.index();
    public static final int OPPORTUNITY1 = AttributesEnum.Opportunity1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public NoteImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("sfa.model.entities.Note");
    }

    /**
     * Gets the attribute value for Noteid, using the alias name Noteid.
     * @return the value of Noteid
     */
    public BigDecimal getNoteid() {
        return (BigDecimal) getAttributeInternal(NOTEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Noteid.
     * @param value value to set the Noteid
     */
    public void setNoteid(BigDecimal value) {
        setAttributeInternal(NOTEID, value);
    }

    /**
     * Gets the attribute value for Content, using the alias name Content.
     * @return the value of Content
     */
    public String getContent() {
        return (String) getAttributeInternal(CONTENT);
    }

    /**
     * Sets <code>value</code> as the attribute value for Content.
     * @param value value to set the Content
     */
    public void setContent(String value) {
        setAttributeInternal(CONTENT, value);
    }

    /**
     * Gets the attribute value for Datetime, using the alias name Datetime.
     * @return the value of Datetime
     */
    public Timestamp getDatetime() {
        return (Timestamp) getAttributeInternal(DATETIME);
    }

    /**
     * Sets <code>value</code> as the attribute value for Datetime.
     * @param value value to set the Datetime
     */
    public void setDatetime(Timestamp value) {
        setAttributeInternal(DATETIME, value);
    }

    /**
     * Gets the attribute value for Accountid, using the alias name Accountid.
     * @return the value of Accountid
     */
    public BigDecimal getAccountid() {
        return (BigDecimal) getAttributeInternal(ACCOUNTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Accountid.
     * @param value value to set the Accountid
     */
    public void setAccountid(BigDecimal value) {
        setAttributeInternal(ACCOUNTID, value);
    }

    /**
     * Gets the attribute value for Contactid, using the alias name Contactid.
     * @return the value of Contactid
     */
    public BigDecimal getContactid() {
        return (BigDecimal) getAttributeInternal(CONTACTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Contactid.
     * @param value value to set the Contactid
     */
    public void setContactid(BigDecimal value) {
        setAttributeInternal(CONTACTID, value);
    }

    /**
     * Gets the attribute value for Opportunity, using the alias name Opportunity.
     * @return the value of Opportunity
     */
    public BigDecimal getOpportunity() {
        return (BigDecimal) getAttributeInternal(OPPORTUNITY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Opportunity.
     * @param value value to set the Opportunity
     */
    public void setOpportunity(BigDecimal value) {
        setAttributeInternal(OPPORTUNITY, value);
    }

    /**
     * Gets the attribute value for Createdby, using the alias name Createdby.
     * @return the value of Createdby
     */
    public String getCreatedby() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Createdby.
     * @param value value to set the Createdby
     */
    public void setCreatedby(String value) {

        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for Subject, using the alias name Subject.
     * @return the value of Subject
     */
    public String getSubject() {
        return (String) getAttributeInternal(SUBJECT);
    }

    /**
     * Sets <code>value</code> as the attribute value for Subject.
     * @param value value to set the Subject
     */
    public void setSubject(String value) {
        setAttributeInternal(SUBJECT, value);
    }

    /**
     * Gets the attribute value for Createddate, using the alias name Createddate.
     * @return the value of Createddate
     */
    public Timestamp getCreateddate() {
        return (Timestamp) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Createddate.
     * @param value value to set the Createddate
     */
    public void setCreateddate(Timestamp value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * Gets the attribute value for Updatedby, using the alias name Updatedby.
     * @return the value of Updatedby
     */
    public String getUpdatedby() {
        return (String) getAttributeInternal(UPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Updatedby.
     * @param value value to set the Updatedby
     */
    public void setUpdatedby(String value) {
        setAttributeInternal(UPDATEDBY, value);
    }

    /**
     * Gets the attribute value for Updateddate, using the alias name Updateddate.
     * @return the value of Updateddate
     */
    public Timestamp getUpdateddate() {
        return (Timestamp) getAttributeInternal(UPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Updateddate.
     * @param value value to set the Updateddate
     */
    public void setUpdateddate(Timestamp value) {
        setAttributeInternal(UPDATEDDATE, value);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getCustomeraccount() {
        return (EntityImpl) getAttributeInternal(CUSTOMERACCOUNT);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setCustomeraccount(EntityImpl value) {
        setAttributeInternal(CUSTOMERACCOUNT, value);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getCustomercontacts() {
        return (EntityImpl) getAttributeInternal(CUSTOMERCONTACTS);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setCustomercontacts(EntityImpl value) {
        setAttributeInternal(CUSTOMERCONTACTS, value);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public OpportunityImpl getOpportunity1() {
        return (OpportunityImpl) getAttributeInternal(OPPORTUNITY1);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setOpportunity1(OpportunityImpl value) {
        setAttributeInternal(OPPORTUNITY1, value);
    }


    /**
     * @param noteid key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(BigDecimal noteid) {
        return new Key(new Object[] { noteid });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        //        ADFContext adfCtx = ADFContext.getCurrent();
        //        SecurityContext secCntx = adfCtx.getSecurityContext();
        //        String value = secCntx.getUserName();
        //        setCreatedby(value);
        super.create(attributeList);
//        SequenceImpl seq = new SequenceImpl("COMMONSEQUENCE", getDBTransaction().getRootApplicationModule());
//        BigDecimal noteid = new BigDecimal(seq.getSequenceNumber().toString());
//        setNoteid(noteid);
    }

    protected void initDefaultExpressionAttributes(AttributeList attributeList) {
        ADFContext adfCtx = ADFContext.getCurrent();
        SecurityContext secCntx = adfCtx.getSecurityContext();
        String value = secCntx.getUserName();
        this.setCreatedby(value);
    }
    
    
}

